<script>
    var TOKEN = null;
    const ADRESSE = 'http://192.168.1.103:1000'  // or https://api.oumardev.com in production

    function save() {
            document.getElementById("canvasimg").style.border = "2px solid";
            var dataURL = canvas.toDataURL();

            toDataURL(dataURL, function(dataUrl) {
                const data = {signature : dataURL}
                axios.post(`${ADRESSE}/apoloanapi/addsignature`,data,{
                    headers: { Authorization: `Bear ${TOKEN}` }
                })
            })
        
            document.getElementById("canvasimg").src = dataURL;
            document.getElementById("canvasimg").style.display = "inline";
    }

    var canvas, ctx, flag = false,
    prevX = 0,
    currX = 0,
    prevY = 0,
    currY = 0,
    dot_flag = false;
    
    var x = "black",
    y = 2;
    
    function init() {
        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;
        
        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
    }
    
    function color(obj) {
    switch (obj.id) {
        case "green":
            x = "green";
            break;
        case "blue":
            x = "blue";
            break;
        case "red":
            x = "red";
            break;
        case "yellow":
            x = "yellow";
            break;
        case "orange":
            x = "orange";
            break;
        case "black":
            x = "black";
            break;
        case "white":
            x = "white";
            break;
    }
    if (x == "white") y = 14;
    else y = 2;
    
    }
    
    function draw() {
    ctx.beginPath();
    ctx.moveTo(prevX, prevY);
    ctx.lineTo(currX, currY);
    ctx.strokeStyle = x;
    ctx.lineWidth = y;
    ctx.stroke();
    ctx.closePath();
    }
    
    function erase() {
       ctx.clearRect(0, 0, w, h);
       document.getElementById("canvasimg").style.display = "none";
    }
    
   
    function toDataURL(url, callback) {
       var xhr = new XMLHttpRequest();
       xhr.onload = function() {
         var reader = new FileReader();
         reader.onloadend = function() {
           callback(reader.result);
         }
         reader.readAsDataURL(xhr.response);
       };
       xhr.open('GET', url);
       xhr.responseType = 'blob';
       xhr.send();
   }
   
    
    function findxy(res, e) {
    if (res == 'down') {
        prevX = currX;
        prevY = currY;
        currX = e.clientX - canvas.offsetLeft;
        currY = e.clientY - canvas.offsetTop;
    
        flag = true;
        dot_flag = true;
        if (dot_flag) {
            ctx.beginPath();
            ctx.fillStyle = x;
            ctx.fillRect(currX, currY, 2, 2);
            ctx.closePath();
            dot_flag = false;
        }
    }
    if (res == 'up' || res == "out") {
        flag = false;
    }
    if (res == 'move') {
        if (flag) {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - canvas.offsetLeft;
            currY = e.clientY - canvas.offsetTop;
            draw();
        }
    }
}

    var qrcode = new QRCode(document.getElementById('qrcode'))

    // Create WebSocket connection.
    const socket = io(`${ADRESSE}`);

    socket.on('id', function (event) {
        qrcode.makeCode(event)
    });

    socket.on('pagesign',async function(data){

        TOKEN = data.token
        var htmlcode = document.getElementById('htmlcode')
        htmlcode.innerHTML = `
            <p>Dessiner votre signature dans la case</p>
            <div style="display:flex; flex-direction: row;width:200px; height:200px">
                <div style="display:flex; flex-direction: column;width:200px; height:200px">
                    <canvas id="can" width="200" height="200" style="border:2px solid;"></canvas>
                    <input type="button" value="Enregistrer" id="btn" size="30" onclick="save()">
                    <input type="button" value="Reprendre" id="clr" size="23" onclick="erase()">
                </div>
                <img id="canvasimg" style="display:none;">
            </div>
        `
        init()
    })

</script>